#!/usr/bin/env python

# DIRT.
#
# Andy Mastbaum (amastbaum@gmail.com), August 2011

import sys
import signal

def help():
    print \
'''Usage:

  dirt serve
  - Run the dirt remote execution server, which will dole out unfinished tasks
    in the database to available execution hosts.

  dirt updatenodes [host1] [host2] ...
  - Update stored system information on each host, adding the host to the
    database if necessary.
'''

def signal_handler(signal, frame):
    print 'Caught SIGINT (Ctrl-C), Exiting.'
    # do something smart
    sys.exit(0)

def serve_forever():
    import couchdb
    import execnet
    import tasks.heartbeat
    import core.helpers
    import core.dbi
    import core.load_balance
    signal.signal(signal.SIGINT, signal_handler)
    print 'dirt is running...'

    db = core.helpers.connect_to_db()
    nodegen = core.load_balance.round_robin(db)
    taskgen = core.dbi.get_tasks(db)

    for id, name in taskgen:
        node = nodegen.next()['hostname']
        print id, ':', name, '->', node
        try:
            print 'trying node', node, '...',
            gw = execnet.makegateway('ssh=%s' % node)
            ch = gw.remote_exec(tasks.heartbeat)
            print ch.receive()
        except execnet.gateway.HostNotFound:
            print 'host', node, 'not found'
            continue

if __name__ == '__main__':
    if len(sys.argv) < 2:
        help()
        sys.exit(1)

    if sys.argv[1] == 'serve':
        serve_forever()
    elif sys.argv[1] == 'updatenodes':
        import core.helpers
        nodes = sys.argv[2:]
        if len(nodes) == 0:
            help()
            sys.exit(1)
        core.helpers.node_recon(nodes, core.helpers.connect_to_db())

