#!/usr/bin/env python

# DIRT.
#
# Andy Mastbaum (amastbaum@gmail.com), August 2011

import sys
import signal

def help():
    print \
'''Usage:

  dirt serve
  - Run the dirt remote execution server, which will dole out unfinished tasks
    in the database to available execution hosts.

  dirt updatenodes [host1] [host2] ...
  - Update stored system information on each host, adding the host to the
    database if necessary.
'''

def signal_handler(signal, frame):
    print 'Caught SIGINT (Ctrl-C), Exiting.'
    # do something smart
    sys.exit(0)

def serve_forever():
    import couchdb
    import execnet
    import tasks.heartbeat
    from core import helpers
    from core import load_balance
    from core import dbi
    signal.signal(signal.SIGINT, signal_handler)
    print 'dirt is running...'

    db = helpers.connect_to_db()
    nodegen = load_balance.round_robin(db)
    taskgen = dbi.get_tasks(db)

    for id, name in taskgen:
        node = nodegen.next()
        print id, ':', name, '->', node['hostname']
        results = helpers.remote_execute(node, id, name)
        print results

if __name__ == '__main__':
    if len(sys.argv) < 2:
        help()
        sys.exit(1)

    if sys.argv[1] == 'serve':
        serve_forever()
    elif sys.argv[1] == 'updatenodes':
        import core.helpers
        nodes = sys.argv[2:]
        if len(nodes) == 0:
            help()
            sys.exit(1)
        core.helpers.node_recon(nodes, core.helpers.connect_to_db())

